apiVersion: apps/v1
kind: Deployment
metadata:
  name: manejo-usuarios
  labels:
    app: manejo-usuarios
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manejo-usuarios
  template:
    metadata:
      labels:
        app: manejo-usuarios
    spec:
      containers:
        - name: manejo-usuarios
          image: us-central1-docker.pkg.dev/appnomonoliticas-452202/app-no-monoliticas-repo/manejo-usuarios:1.0
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              value: "postgresql://postgres:monolitic4s-users@127.0.0.1/user_db"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              value: "monolitic4s-users"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "user_db"
            - name: DB_HOST
              value: "127.0.0.1"  # proxy
          imagePullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
          command:
            - "/cloud-sql-proxy"
            - "appnomonoliticas-452202:us-central1:monoliticas-users-db"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/cloudsql/credentials.json
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: manejo-usuarios-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 8000
    type: HTTP
    requestPath: /auth/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-manejo-usuarios
  annotations:
    cloud.google.com/backend-config: '{"default": "manejo-usuarios-config"}'
spec:
  type: NodePort
  selector:
    app: manejo-usuarios
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      nodePort: 30000